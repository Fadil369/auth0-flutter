// Mocks generated by Mockito 5.3.2 from annotations
// in auth0_flutter/example/ios/.symlinks/plugins/auth0_flutter/test/auth0_flutter_plugin_real_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:auth0_flutter/src/web/js_interop.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWebCredentials_0 extends _i1.SmartFake
    implements _i2.WebCredentials {
  _FakeWebCredentials_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Auth0Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuth0Client extends _i1.Mock implements _i2.Auth0Client {
  @override
  _i3.Future<void> loginWithRedirect([_i2.RedirectLoginOptions? options]) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginWithRedirect,
          [options],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> handleRedirectCallback([String? url]) => (super.noSuchMethod(
        Invocation.method(
          #handleRedirectCallback,
          [url],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> checkSession() => (super.noSuchMethod(
        Invocation.method(
          #checkSession,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<_i2.WebCredentials> getTokenSilently(
          [_i2.GetTokenSilentlyOptions? options]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTokenSilently,
          [options],
        ),
        returnValue: _i3.Future<_i2.WebCredentials>.value(_FakeWebCredentials_0(
          this,
          Invocation.method(
            #getTokenSilently,
            [options],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.WebCredentials>.value(_FakeWebCredentials_0(
          this,
          Invocation.method(
            #getTokenSilently,
            [options],
          ),
        )),
      ) as _i3.Future<_i2.WebCredentials>);
  @override
  _i3.Future<bool> isAuthenticated() => (super.noSuchMethod(
        Invocation.method(
          #isAuthenticated,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
